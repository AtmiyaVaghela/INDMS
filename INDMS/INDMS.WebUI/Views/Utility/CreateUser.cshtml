@model INDMS.WebUI.Models.User

@{
    ViewBag.Title = "CreateUser";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Create User
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a href="#"><i class="fa fa-wrench"></i> Utility</a></li>
            <li class="active">Create User</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        <!-- Your Page Content Here -->
        <div class="row">
            <div class="col-md-12">
                @if (TempData["MSG"] != null) {
                    <div class="alert alert-success alert-dismissable">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4>	<i class="icon fa fa-check"></i> Alert!</h4>
                        @TempData["MSG"]
                    </div>
                }
                @if (TempData["Error"] != null) {
                    <div class="alert alert-danger alert-dismissable">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4>	<i class="icon fa fa-check"></i> Alert!</h4>
                        @TempData["Error"]
                    </div>
                }

                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">
                            @Html.ActionLink("Back", "UserList", null, new { @class = "btn btn-primary" })
                        </h3>
                    </div><!-- /.box-header -->
                    <!-- form start -->
                    @using (Html.BeginForm()) {
                        <div class="form-horizontal">
                            @Html.AntiForgeryToken()
                            <div class="box-body">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter User Name" } })
                                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("Role", null, new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Name" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        <select id="sDesignation" class="form-control select2" name="Designation"></select>
                                    </div>
                                    <div class="col-md-4" id="divODesignation" style="display:none">
                                        <input type="text" name="ODesignation" value=" " class="form-control" id="ODesignation" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Email Address" } })
                                    </div>
                                </div>
                            </div><!-- /.box-body -->
                            <div class="box-footer">
                                <div class="col-md-offset-2 col-md-4">
                                    <button type="submit" class="btn btn-primary pull-right">Submit</button>
                                </div>
                            </div>
                        </div>

                    }
                </div><!-- /.box -->
            </div>
        </div>
    </section><!-- /.content -->
</div><!-- /.content-wrapper -->
@section scripts{
    <script>
        $(function () {
            //Initialize Select2 Elements
            $(".select2").select2();

            $("#sDesignation").change(function () {
                var value = $('#sDesignation').val();
                if (value == "OTHERS") {
                    $('#divODesignation').css('display', 'block');
                }
                else {
                    $('#sDesignation').val('');
                    $('#divODesignation').css('display', 'none');
                }
            });


            $.ajax({

                url: '@Url.Action("GetAllDesignation","Utility")',
                type: 'GET',
                data: {},
                success: function (data) {
                  
                    $('#sDesignation').empty();
                    $.each(data, function (index, optiondata) {
                        $("#sDesignation").append("<option value='" + optiondata + "'>" + optiondata + "</option>");
                    });
                    $("#sDesignation").append("<option value='OTHERS'>OTHERS</option>");
                    $("#sDesignation option").eq(0).before($("<option></option>").val("").text("-Select-"));
                    $('#sDesignation').select2("val", "");
                },

                error: function (xhr) {
                    alert("Something seems Wrong");
                }
            });
        });
    </script>
    }