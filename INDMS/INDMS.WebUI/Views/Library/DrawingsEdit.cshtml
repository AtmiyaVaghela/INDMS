@model INDMS.WebUI.ViewModels.DrawingViewModel
@{
    ViewBag.Title = "Edit - Drawings";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Edit - Drawings
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i>Library</a></li>
            <li class="active">Drawings</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        <!-- Your Page Content Here -->
        <div class="row">
            <div class="col-md-12">
                @if (TempData["MSG"] != null) {
                    <div class="alert alert-success alert-dismissable">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        @TempData["MSG"]
                    </div>
                }
                @if (TempData["Error"] != null) {
                    <div class="alert alert-danger alert-dismissable">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        @TempData["Error"]
                    </div>
                }

                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">
                            <p>@Html.ActionLink("Back", "Drawings", null, new { @class = "btn btn-primary" })</p>
                        </h3>
                    </div><!-- /.box-header -->
                    <!-- form start -->
                    @using (Html.BeginForm("DrawingsEdit", "Library", FormMethod.Post, new { enctype = "multipart/form-data" })) {
                        <div class="form-horizontal">
                            @Html.AntiForgeryToken()
                            <div class="box-body">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    @Html.HiddenFor(x=>x.Drawing.Id)

                                    @Html.Label("PO No", new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(model => model.Drawing.PONo, null, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Drawing.PONo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("File No", new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(model => model.Drawing.FileNo, null, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Drawing.FileNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Drawing No", new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(model => model.Drawing.DrawingNo, null, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Drawing.DrawingNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Drawing.Subject, new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(model => model.Drawing.Subject, null, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Drawing.Subject, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Approval Date", new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">
                                        <div class="input-group">
                                            <div class="input-group-addon">
                                                <i class="fa fa-calendar"></i>
                                            </div>
                                            @Html.TextBoxFor(m => m.Drawing.ApprovalDate, new { @class = "form-control dp" })
                                        </div><!-- /.input group -->
                                        @Html.ValidationMessageFor(model => model.Drawing.ApprovalDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Approval By", new { @class = "control-label col-md-2" })

                                    <div class="col-md-6">
                                        <select id="sApprovalBy" class="form-control select2" name="Drawing.ApprovalBy"></select>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("File", new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">
                                        @Html.HiddenFor(x => @Model.file)
                                        @if (Model.file != null) {
                                            <a href="@Model.file" target="_blank" class="fa fa-folder-open-o" title="Open">Open</a>
                                        }
                                        <input type="file" id="inputFile" name="inputFile">
                                        <p class="help-block">File must be PDF.</p>
                                    </div>
                                </div>

                            </div><!-- /.box-body -->
                            <div class="box-footer">
                                <div class="col-md-offset-2 col-md-6">
                                    <button type="submit" class="btn btn-primary pull-right">Submit</button>
                                </div>
                            </div>
                        </div>
                    }
                </div><!-- /.box -->
            </div>
        </div>
    </section><!-- /.content -->
</div><!-- /.content-wrapper -->
@section scripts{
    <script>
        $(function () {

            $.ajax({
                url: "@Url.Action("GetJsonObjOfUsers", "Library")",
                type: 'GET',
                data: {},
                success: function (data) {
                    $('#sApprovalBy').empty();
                    $.each(data, function (index, optiondata) {

                        $("#sApprovalBy").append("<option value='" + optiondata.UserId + "'>" + optiondata.Name + "</option>");
                    });
                    //$("#sApprovalBy").append("<option value='OTHERS'>OTHERS</option>");
                    $("#sApprovalBy option").eq(0).before($("<option></option>").val("").text("-Select-"));
                    $("#sApprovalBy").val("");
                    $('#sApprovalBy').select2("val", "@Model.Drawing.ApprovalBy");
                },

                error: function (xhr) {
                    alert("Something seems Wrong binding Approval Person");

                }
            });

            $('li').removeClass("active");
            $('#liLibrary').addClass("active")
            $('#liDrawing ').addClass("active")
            $('#liDrawing i').addClass("text-aqua")
        });
    </script>
}